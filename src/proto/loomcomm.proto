package loomcomm;

option optimize_for = LITE_RUNTIME;

message Register {
	enum Type {
		REGISTER_WORKER = 1;
		REGISTER_CLIENT = 2;
	}
	required int32 protocol_version = 1;
	required Type type = 2;

	// Worker
	optional int32 port = 3;
	repeated string task_types = 4;
	optional int32 cpus = 5;

	// Client
	optional bool info = 10;
}

message ServerMessage {
	enum Type {
		START_JOB = 1;
	}
}

message WorkerCommand {
	enum Type {
		TASK = 1;
		SEND = 2;
		REMOVE = 3;

	}
	required Type type = 1;

	// ALL
	optional int32 id = 2;

	// TASK
	optional int32 task_type = 3;
	optional string task_config = 4;
	repeated int32 task_inputs = 5;

	// SEND
	optional string address = 10;
	optional bool with_size = 11;
}

message WorkerResponse {
	optional int32 id = 2;
}

message Announce {
	required int32 port = 1;
}

message DataPrologue {
	required int32 id = 1;
	optional uint64 data_size = 3;
}

message Data
{
	required int32 type_id = 1;
	optional uint64 size = 2;
}

message Info {
	required int32 id = 1;
	required string worker = 2;
}

message ClientMessage {
	enum Type {
		DATA = 1;
		INFO = 2;
	}
	required Type type = 1;
	optional DataPrologue data = 2;
	optional Info info = 3;
}
